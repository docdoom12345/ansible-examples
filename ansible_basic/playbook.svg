<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 (0)
 --><!-- Pages: 1 --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1439pt" height="152pt" viewBox="0.00 0.00 1438.89 152.00" id="svg">
<script type="text/javascript" href="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" id="jquery"/><script type="text/javascript" id="my_javascript"><![CDATA[/**
 * This file contains the functions responsible to highlight the plays, roles and tasks when rendering the SVG file in a browser
 * or any SVG reader that support Javascript.
 */

/**
 * The name of the CSS class for highlighted elements
 * @type {string}
 */
const HIGHLIGHT_CLASS = "highlight";

/**
 * The current selected element on the graph
 * @type {null}
 */
let currentSelectedElement = null;

/**
 * Highlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 */
function highlightLinkedNodes(parentElement, visitedElements = []) {
    $(parentElement).find('link').each(function (index, element) {
        const linkedElementId = $(element).attr('target');
        const edgeId = $(element).attr('edge');

        const currentElement = $(`#${linkedElementId}`);
        currentElement.addClass(HIGHLIGHT_CLASS);

        // Highlight the edge point to the target
        $(`#${edgeId}`).addClass(HIGHLIGHT_CLASS);

        if (!visitedElements.includes(linkedElementId)) {
            visitedElements.push(linkedElementId);
            // Recursively highlight
            highlightLinkedNodes(currentElement, visitedElements);
        }
    })
}


/**
 * Unhighlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 * @param {boolean} isHover True when we are coming from a mouseleave event. In that case, we should not unhighlight if
 * the parentElement is the current selected element
 */
function unHighlightLinkedNodes(parentElement, visitedElements = [], isHover) {
    const currentSelectedElementId = $(currentSelectedElement).attr('id');
    // Do not unhighlight the current selected element
    if ($(parentElement).attr('id') !== currentSelectedElementId || !isHover) {

        $(parentElement).find('link').each(function (index, element) {
            const linkedElementId = $(element).attr('target');
            const edgeId = $(element).attr('edge');

            const linkedElement = $(`#${linkedElementId}`);

            if (linkedElement.attr('id') !== currentSelectedElementId) {
                linkedElement.removeClass(HIGHLIGHT_CLASS);

                // Unhighlight the edge point to the target
                $(`#${edgeId}`).removeClass(HIGHLIGHT_CLASS);

                if (!visitedElements.includes(linkedElementId)) {
                    visitedElements.push(linkedElementId);
                    // Recursively unhighlight
                    unHighlightLinkedNodes(linkedElement, visitedElements, isHover);
                }
            }

        })
    }

}

/**
 * Hover handler for mouseenter event
 * @param {Event} event
 */
function hoverMouseEnter(event) {
    highlightLinkedNodes(event.currentTarget, []);
}

/**
 * Hover handler for mouseleave event
 * @param {Event} event
 */
function hoverMouseLeave(event) {
    unHighlightLinkedNodes(event.currentTarget, [], true);
}

/**
 * Handler when clicking on some elements
 * @param {Event} event
 */
function clickOnElement(event) {
    const newClickedElement = $(event.currentTarget);

    event.preventDefault(); // Disable the default click behavior since we override it here

    if (newClickedElement.attr('id') === $(currentSelectedElement).attr('id')) { // clicking again on the same element
        newClickedElement.removeClass(HIGHLIGHT_CLASS);
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        currentSelectedElement = null;
    } else { // clicking on a different node

        // Remove highlight from all the nodes linked to the current selected node
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        if (currentSelectedElement) {
            currentSelectedElement.removeClass(HIGHLIGHT_CLASS);
        }

        newClickedElement.addClass(HIGHLIGHT_CLASS);
        highlightLinkedNodes(newClickedElement, []);
        currentSelectedElement = newClickedElement;
    }
}

/**
 * Handler when double clicking on some elements
 * @param {Event} event
 */
function dblClickElement(event) {
    const newElementDlbClicked = event.currentTarget;
    const links = $(newElementDlbClicked).find("a[xlink\\:href]");

    if (links.length > 0) {
        document.location = $(links[0]).attr("xlink:href");
    } else {
        console.log("No links found on this element");
    }
}


$("#svg").ready(function () {
    let playbooks = $("g[id^=playbook_]");
    let plays = $("g[id^=play_]");
    let roles = $("g[id^=role_]");
    let blocks = $("g[id^=block_]");
    let tasks = $("g[id^=pre_task_], g[id^=task_], g[id^=post_task_]");

    playbooks.hover(hoverMouseEnter, hoverMouseLeave);
    playbooks.click(clickOnElement);
    playbooks.dblclick(dblClickElement);

    // Set hover and click events on the plays
    plays.hover(hoverMouseEnter, hoverMouseLeave);
    plays.click(clickOnElement);
    plays.dblclick(dblClickElement);

    // Set hover and click events on the roles
    roles.hover(hoverMouseEnter, hoverMouseLeave);
    roles.click(clickOnElement);
    roles.dblclick(dblClickElement);

    // Set hover and click events on the blocks
    blocks.hover(hoverMouseEnter, hoverMouseLeave);
    blocks.click(clickOnElement);
    blocks.dblclick(dblClickElement);

    // Set hover and click events on the tasks
    tasks.hover(hoverMouseEnter, hoverMouseLeave);
    tasks.click(clickOnElement);
    tasks.dblclick(dblClickElement);

});
]]></script><style type="text/css" id="my_css"><![CDATA[/**
 Hover on nodes, edges, path and polygon
 */
.node:hover, .edge:hover, path:hover, path + polygon:hover {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}

/**
 Manually added class by the script highlight-hover.js when hovering on plays and roles
 */
.highlight {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}
]]></style><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 148)">
<polygon fill="white" stroke="transparent" points="-4,4 -4,-148 1434.89,-148 1434.89,4 -4,4"/>
<!-- playbook_267dea4c -->
<g id="playbook_267dea4c" class="node">
<title>playbook_267dea4c</title>
<g id="a_playbook_267dea4c"><a xlink:href="/home/student/ansible_examples/ansible_basic/playbook.yaml" xlink:title="playbook.yaml">
<ellipse fill="none" stroke="black" stroke-dasharray="1,5" cx="76.69" cy="-45" rx="76.89" ry="18"/>
<text text-anchor="middle" x="76.69" y="-41.3" font-family="Times-Roman" font-size="14.00">playbook.yaml</text>
</a>
</g>
<links><link target="play_16c8973a" edge="edge_1_playbook_267dea4c_play_16c8973a"/><link target="play_03521311" edge="edge_2_playbook_267dea4c_play_03521311"/></links></g>
<!-- play_16c8973a -->
<g id="play_16c8973a" class="node">
<title>play_16c8973a</title>
<g id="a_play_16c8973a"><a xlink:href="/home/student/ansible_examples/ansible_basic/playbook.yaml" xlink:title="Play: Demonstrate use of ansible module (0)">
<polygon fill="#3e668e" stroke="#3e668e" points="836.39,-90 511.39,-90 511.39,-54 836.39,-54 836.39,-90"/>
<text text-anchor="middle" x="673.89" y="-68.3" font-family="Times-Roman" font-size="14.00" fill="#ffffff">Play: Demonstrate use of ansible module (0)</text>
</a>
</g>
<links><link target="task_7e757544" edge="edge_1_play_16c8973a_task_7e757544"/><link target="task_cb5773bb" edge="edge_2_play_16c8973a_task_cb5773bb"/></links></g>
<!-- playbook_267dea4c&#45;&gt;play_16c8973a -->
<g id="edge_playbook_267dea4c_play_16c8973a" class="edge">
<title>playbook_267dea4c-&gt;play_16c8973a</title>
<g id="a_edge_playbook_267dea4c_play_16c8973a"><a xlink:title="1 Play: Demonstrate use of ansible module (0)">
<path fill="none" stroke="#3e668e" d="M152.17,-48.38C239.08,-52.32 385.61,-58.97 501.13,-64.21" id="path_edge_playbook_267dea4c_play_16c8973a"/>
<polygon fill="#3e668e" stroke="#3e668e" points="501,-67.71 511.15,-64.66 501.32,-60.71 501,-67.71"/>
</a>
</g>
<g id="a_edge_playbook_267dea4c_play_16c8973a-label"><a xlink:title="1 Play: Demonstrate use of ansible module (0)">
<text text-anchor="middle" font-family="Times-Roman" font-size="14.00" fill="#3e668e" dy="-0.2%"><textPath xlink:href="#path_edge_playbook_267dea4c_play_16c8973a" startOffset="220.48233855680286">1 Play: Demonstrate use of ansible module (0)</textPath></text>
</a>
</g>
</g>
<!-- play_03521311 -->
<g id="play_03521311" class="node">
<title>play_03521311</title>
<g id="a_play_03521311"><a xlink:href="/home/student/ansible_examples/ansible_basic/playbook.yaml" xlink:title="Play: Install packages (0)">
<polygon fill="#9022aa" stroke="#9022aa" points="768.39,-36 579.39,-36 579.39,0 768.39,0 768.39,-36"/>
<text text-anchor="middle" x="673.89" y="-14.3" font-family="Times-Roman" font-size="14.00" fill="#ffffff">Play: Install packages (0)</text>
</a>
</g>
<links><link target="task_f4d06943" edge="edge_1_play_03521311_task_f4d06943"/></links></g>
<!-- playbook_267dea4c&#45;&gt;play_03521311 -->
<g id="edge_playbook_267dea4c_play_03521311" class="edge">
<title>playbook_267dea4c-&gt;play_03521311</title>
<g id="a_edge_playbook_267dea4c_play_03521311"><a xlink:title="2 Play: Install packages (0)">
<path fill="none" stroke="#9022aa" d="M138.02,-34.12C149.09,-32.47 160.56,-30.99 171.39,-30 308.48,-17.44 467.48,-15.82 569.06,-16.41" id="path_edge_playbook_267dea4c_play_03521311"/>
<polygon fill="#9022aa" stroke="#9022aa" points="569.29,-19.91 579.32,-16.48 569.34,-12.91 569.29,-19.91"/>
</a>
</g>
<g id="a_edge_playbook_267dea4c_play_03521311-label"><a xlink:title="2 Play: Install packages (0)">
<text text-anchor="middle" font-family="Times-Roman" font-size="14.00" fill="#9022aa" dy="-0.2%"><textPath xlink:href="#path_edge_playbook_267dea4c_play_03521311" startOffset="300.07267023672705">2 Play: Install packages (0)</textPath></text>
</a>
</g>
</g>
<!-- task_7e757544 -->
<g id="task_7e757544" class="node">
<title>task_7e757544</title>
<g id="a_task_7e757544"><a xlink:href="/home/student/ansible_examples/ansible_basic/playbook.yaml" xlink:title="Check of python is installed in managed nodes">
<polygon fill="none" stroke="#3e668e" points="1430.64,-118.54 1430.64,-133.46 1271.31,-144 1045.97,-144 886.63,-133.46 886.63,-118.54 1045.97,-108 1271.31,-108 1430.64,-118.54"/>
<text text-anchor="middle" x="1158.64" y="-122.3" font-family="Times-Roman" font-size="14.00">[task] Check of python is installed in managed nodes</text>
</a>
</g>
</g>
<!-- play_16c8973a&#45;&gt;task_7e757544 -->
<g id="edge_1_play_16c8973a_task_7e757544" class="edge">
<title>play_16c8973a-&gt;task_7e757544</title>
<g id="a_edge_1_play_16c8973a_task_7e757544"><a xlink:title="1 ">
<path fill="none" stroke="#3e668e" d="M811.63,-90.02C836.49,-93.14 862.2,-96.25 886.39,-99 919.77,-102.79 955.5,-106.56 989.7,-110.02" id="path_edge_1_play_16c8973a_task_7e757544"/>
<polygon fill="#3e668e" stroke="#3e668e" points="989.48,-113.51 999.78,-111.03 990.18,-106.55 989.48,-113.51"/>
</a>
</g>
<g id="a_edge_1_play_16c8973a_task_7e757544-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times-Roman" font-size="14.00" fill="#3e668e" dy="-0.2%"><textPath xlink:href="#path_edge_1_play_16c8973a_task_7e757544" startOffset="134.18784190970354">1 </textPath></text>
</a>
</g>
</g>
<!-- task_cb5773bb -->
<g id="task_cb5773bb" class="node">
<title>task_cb5773bb</title>
<g id="a_task_cb5773bb"><a xlink:href="/home/student/ansible_examples/ansible_basic/playbook.yaml" xlink:title="Reboot all managed nodes in centos group">
<polygon fill="none" stroke="#3e668e" points="1410.34,-64.54 1410.34,-79.46 1262.9,-90 1054.38,-90 906.94,-79.46 906.94,-64.54 1054.38,-54 1262.9,-54 1410.34,-64.54"/>
<text text-anchor="middle" x="1158.64" y="-68.3" font-family="Times-Roman" font-size="14.00">[task] Reboot all managed nodes in centos group</text>
</a>
</g>
</g>
<!-- play_16c8973a&#45;&gt;task_cb5773bb -->
<g id="edge_2_play_16c8973a_task_cb5773bb" class="edge">
<title>play_16c8973a-&gt;task_cb5773bb</title>
<g id="a_edge_2_play_16c8973a_task_cb5773bb"><a xlink:title="2 ">
<path fill="none" stroke="#3e668e" d="M836.64,-72C856.07,-72 876.27,-72 896.66,-72" id="path_edge_2_play_16c8973a_task_cb5773bb"/>
<polygon fill="#3e668e" stroke="#3e668e" points="896.68,-75.5 906.68,-72 896.68,-68.5 896.68,-75.5"/>
</a>
</g>
<g id="a_edge_2_play_16c8973a_task_cb5773bb-label"><a xlink:title="2 ">
<text text-anchor="middle" font-family="Times-Roman" font-size="14.00" fill="#3e668e" dy="-0.2%"><textPath xlink:href="#path_edge_2_play_16c8973a_task_cb5773bb" startOffset="43.61519999999999">2 </textPath></text>
</a>
</g>
</g>
<!-- task_f4d06943 -->
<g id="task_f4d06943" class="node">
<title>task_f4d06943</title>
<g id="a_task_f4d06943"><a xlink:href="/home/student/ansible_examples/ansible_basic/playbook.yaml" xlink:title="Install git and java">
<polygon fill="none" stroke="#9022aa" points="1291.56,-10.54 1291.56,-25.46 1213.7,-36 1103.58,-36 1025.72,-25.46 1025.72,-10.54 1103.58,0 1213.7,0 1291.56,-10.54"/>
<text text-anchor="middle" x="1158.64" y="-14.3" font-family="Times-Roman" font-size="14.00">[task] Install git and java</text>
</a>
</g>
</g>
<!-- play_03521311&#45;&gt;task_f4d06943 -->
<g id="edge_1_play_03521311_task_f4d06943" class="edge">
<title>play_03521311-&gt;task_f4d06943</title>
<g id="a_edge_1_play_03521311_task_f4d06943"><a xlink:title="1 ">
<path fill="none" stroke="#9022aa" d="M768.54,-18C838.61,-18 935.68,-18 1015.33,-18" id="path_edge_1_play_03521311_task_f4d06943"/>
<polygon fill="#9022aa" stroke="#9022aa" points="1015.45,-21.5 1025.45,-18 1015.45,-14.5 1015.45,-21.5"/>
</a>
</g>
<g id="a_edge_1_play_03521311_task_f4d06943-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times-Roman" font-size="14.00" fill="#9022aa" dy="-0.2%"><textPath xlink:href="#path_edge_1_play_03521311_task_f4d06943" startOffset="185.56040000000007">1 </textPath></text>
</a>
</g>
</g>
</g>
</svg>